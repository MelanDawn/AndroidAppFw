<resources>
    <string name="app_name">AndroidAppFw</string>

    <!-- Main activity -->
    <string name="main_tab_base">基础</string>
    <string name="main_tab_ui">UI</string>
    <string name="main_tab_function">功能</string>
    <string name="main_tab_advanced">进阶</string>

    <!-- 基础 -->
    <string name="to_activity_lifecycle_and_launch_mode">Activity`s Lifecycle and LaunchMode </string>
    <string name="to_activity_standard">to standard Activity</string>
    <string name="to_activity_single_top">to singTop Activity</string>
    <string name="to_activity_single_task">to singleTask Activity</string>
    <string name="to_activity_single_task_affinity">to singleTask Affinity Activity</string>
    <string name="to_activity_single_instance">to singleInstance Activity</string>
    <string name="to_activity_standard_config_changes">to standard configChanges Activity（屏幕旋转配置）</string>

    <string name="to_window_soft_input_mode">窗口软键盘模式</string>

    <string name="to_drawable">Drawable</string>
    <string name="to_drawable_bitmap">BitmapDrawable</string>
    <string name="to_drawable_nine_patch">NinePatchDrawable</string>
    <string name="to_drawable_layer">LayerDrawable</string>
    <string name="to_drawable_state_list">StateListDrawable</string>
    <string name="to_drawable_level_list">LevelListDrawable</string>
    <string name="to_drawable_transition">TransitionDrawable</string>
    <string name="to_drawable_inset">InsetDrawable</string>
    <string name="to_drawable_clip">ClipDrawable</string>
    <string name="to_drawable_scale">ScaleDrawable</string>
    <string name="to_drawable_shape">ShapeDrawable</string>

    <string name="to_font">Font</string>

    <string name="to_file_system">FileSystem</string>

    <!-- UI -->
    <string name="to_tag_blink">blink</string>
    <string name="to_tag_include">include</string>
    <string name="to_tag_merge">merge</string>
    <string name="to_tag_request_focus">requestFocus</string>
    <string name="to_tag_tag">tag</string>

    <string name="to_progress_bar">ProgressBar(不可交互)</string>
    <string name="to_abs_seek_bar">|-- AbsSeekBar(拖动进度条，可交互)(抽象类)</string>
    <string name="to_rating_bar">|-- |-- RatingBar(比例进度条，五角星状)</string>
    <string name="to_seek_bar">|-- |-- SeekBar(拖动进度条)</string>

    <string name="to_iv">ImageView</string>
    <string name="to_iv_btn">|-- ImageButton(图片按钮)</string>
    <string name="to_quick_contact_badge">|-- QuickContactBadge(联系人快捷方式)</string>

    <string name="to_tv">TextView</string>
    <string name="to_checked_tv">|-- CheckedTextView(带选择框的文本)</string>
    <string name="to_chronometer">|-- Chronometer(计时器)</string>
    <string name="to_text_clock">|-- TextClock(文本时钟, API 17 开始替代DigitalClock)</string>
    <string name="to_et">|-- EditText</string>
    <string name="to_auto_complete_tv">|-- |-- AutoCompleteTextView(单次提示输入框)</string>
    <string name="to_multi_auto_complete_tv">|-- |-- |-- MultiAutoCompleteTextView(多次提示输入框)</string>
    <string name="to_extract_et">|-- |-- ExtractEditText(非UI视图组件)</string>
    <string name="to_btn">|-- Button</string>
    <string name="to_compound_btn">|-- |-- CompoundButton(复合按钮)（抽象类）</string>
    <string name="to_check_box">|-- |-- |-- CheckBox(复选框)</string>
    <string name="to_radio_btn">|-- |-- |-- RadioButton(单选框)</string>
    <string name="to_switch">|-- |-- |-- Switch(拨动开关)</string>
    <string name="to_toggle_btn">|-- |-- |-- ToggleButton(开关按钮)</string>

    <string name="to_space">Space（API 14）</string>
    <string name="to_view_stub">ViewStub</string>

    <string name="to_view_group">ViewGroup</string>
    <string name="to_absolute_layout">|-- AbsoluteLayout(绝对布局，API 3 过期)</string>
    <string name="to_web_view">|-- |-- WebView</string>
    <string name="to_grid_layout">|-- GridLayout(网格布局，API 15 引入)</string>
    <string name="to_frame_layout">|-- FrameLayout</string>
    <string name="to_app_widget_host_view">|-- |-- AppWidgetHostView</string>
    <string name="to_calendar_view">|-- |-- CalendarView（日历视图）</string>
    <string name="to_gesture_overlay_view">|-- |-- GestureOverlayView</string>
    <string name="to_date_picker">|-- |-- DatePicker（日期选择）</string>
    <string name="to_media_controller">|-- |-- MediaController</string>
    <string name="to_horizontal_scroll_view">|-- |-- HorizontalScrollView（水平滑动视图）</string>
    <string name="to_scroll_view">|-- |-- ScrollView（竖直滑动视图）</string>
    <string name="to_tab_host">|-- |-- TabHost（选项卡布局）</string>
    <string name="to_time_picker">|-- |-- TimePicker（时间选择器）</string>
    <string name="to_view_animator">|-- |-- ViewAnimator（视图动画，未完成）</string>
    <string name="to_view_flipper">|-- |-- |-- ViewFlipper（试图翻转器，未完成）</string>
    <string name="to_view_switcher">|-- |-- |-- ViewSwitcher（视图切换器，未完成）</string>
    <string name="to_image_switcher">|-- |-- |-- ImageSwitcher（图片切换器）</string>
    <string name="to_text_switcher">|-- |-- |-- TextSwitcher（文本切换器）</string>
    <string name="to_linear_layout">|-- LinearLayout(线性布局)</string>
    <string name="to_action_menu_view">|-- |-- ActionMenuView(未完成，API 21 引入)</string>
    <string name="to_number_picker">|-- |-- NumberPicker(数字[数组]选择器，API 11 引入)</string>
    <string name="to_radio_group">|-- |-- RadioGroup(单选框)</string>
    <string name="to_search_view">|-- |-- SearchView(未完成，API 11 引入)</string>
    <string name="to_tab_widget">|-- |-- TabWidget(选项卡布局)</string>
    <string name="to_table_layout">|-- |-- TableLayout(表格布局)</string>
    <string name="to_table_row">|-- |-- TableRow(表格行布局)</string>
    <string name="to_zoom_controls">|-- |-- ZoomControls(放大缩小按钮)</string>
    <string name="to_relative_layout">|-- RelativeLayout（相对布局）</string>
    <string name="to_dialer_filter">|-- |-- DialerFilter（API 26 过期）</string>
    <string name="to_two_line_list_item">|-- |-- TwoLineListItem（API 17 过期）</string>
    <string name="to_animation_frame">帧动画</string>
    <string name="to_animation_tween">补间动画</string>
    <string name="to_animation_attribute">属性动画</string>

    <!-- 功能 -->

    <!-- 进阶 -->
    <string name="advanced_to_diy_permission">自定义Activity</string>
    <string name="advanced_to_dispatch_touch_event">事件分发机制</string>
    <string name="advanced_to_diy_view">自定义View</string>
    <string name="advanced_to_diy_view_group">自定义ViewGroup</string>

    <string name="tag_blink_description">被blink包裹的视图全体闪烁</string>
    <string name="tag_include_description">引入视图，复用视图代码</string>
    <string name="tag_merge_description">被引入的视图，可减少布局层次</string>
    <string name="tag_request_focus_description">
        为该标签的父视图请求焦点，经测试 LinearLayout 无法获取、TextView无法获取、EditText都可以获取，
        因此可以认为是输入框可以，可能存在其他视图也可以。</string>
    <string name="tag_tag_description">
        1、tag标签用于给View提供额外的信息，一个tag是一个信息，可以添加多个tag，以key-value形式；\n
        2、取值时也需要通过 getTag(R.id.key) 形式获取value；\n
        3、View自身可以设置 android:tag属性，这个tag属性也是一个额外信息，两者意义相同，但tag标签可以提供更多信息。
    </string>

    <!-- AbsSeekBar Activity -->
    <string name="abs_seek_bar_description">抽象类，可拖动进度条基类</string>

    <!-- ImageView Activity -->
    <string name="iv_scale_type_description">ImageView的scaleType属性demo展示如下。\n
        图片原始尺寸180x120，180x120，90x30。\n
        第一组iv适应高宽，后续120*60，所有iv红色背景。\n
        常用的是 centerInside 和 fixCenter </string>
    <string name="iv_scale_type_no">原图，无scaleType属性，适应高宽</string>
    <string name="iv_scale_type_center">center：不缩放图片。图片与iv中心点重合，截取图片与iv重合的区域</string>
    <string name="iv_scale_type_centerCrop">centerCrop：等比例缩放图片，直到图片一边等于iv，图片另一边大于iv，图片与iv中心点重合，展示iv与图片重合的区域</string>
    <string name="iv_scale_type_centerInside">centerInside：图片大于iv则等比例缩放，图片完全展示，图片start（即左或上）对齐iv；图片小于iv，不拉伸，居中显示</string>
    <string name="iv_scale_type_fitStart">fitStart：等比例缩放，直到图片一边等于iv的一边，另一边不超过iv的另一边，图片完全展示，图片start（即左或顶）对齐iv</string>
    <string name="iv_scale_type_fitEnd">fitEnd：等比例缩放，直到图片一边等于iv的一边，另一边不超过iv的另一边，图片完全展示，图片end（即右或底）对齐iv</string>
    <string name="iv_scale_type_fitCenter">fitCenter：等比例缩放，直到图片一边等于iv的一边，另一边不超过iv的另一边，图片完全展示，图片居中</string>
    <string name="iv_scale_type_fitXY">fitXY：非等比例缩放，图片拉伸变形，保证图片全部展示且填满iv，同background效果</string>
    <string name="iv_scale_type_matrix">matrix：不缩放图片，图片与iv左上角重合，展示iv与图片重合的区域</string>

    <!-- QuickContactBadge Activity -->
    <string name="quick_contact_badge_description">联系人快捷方式，代码设置联系人号码、Email等，获取联系人权限后，可跳转到联系人页面</string>

    <!-- TextView activity -->
    <string name="tv_normal">普通文本展示框</string>
    <string name="tv_normal_center_v">普通竖直居中文本展示框</string>
    <string name="tv_normal_center_h">普通水平居中展示框</string>
    <string name="tv_normal_center">普通居中展示框</string>
    <string name="tv_normal_ellipse_end">普通内容过大尾部省略框，限制：单行。填充填充填充填充填充填充填充填充填充填充</string>
    <string name="tv_normal_ellipse_start">填充填充填充填充填充填充填充填充填充填充。普通内容过大头部省略框。限制：单行</string>
    <string name="tv_normal_ellipse_marquee">普通内容过大跑马灯展示框，限制：单行、获取焦点、获取触摸模式的焦点。填充填充填充</string>

    <!-- CheckedTextView activity -->
    <string name="checked_tv_normal">默认配置</string>
    <string name="checked_tv_check_multiple_1">多选模式框1，框间选择逻辑无关，控制框样式</string>
    <string name="checked_tv_check_multiple_2">多选模式框2，框间选择逻辑无关，控制框样式</string>
    <string name="checked_tv_check_single_1">单选模式框1，框间选择逻辑无关，控制框样式</string>
    <string name="checked_tv_check_single_2">单选模式框2，框间选择逻辑无关，控制框样式</string>
    <string name="checked_tv_center">文本下上居中</string>
    <string name="checked_tv_width_match_parent">宽度占满</string>
    <string name="checked_tv_checked">checked</string>
    <string name="checked_tv_unchecked">unchecked</string>

    <!-- Chronometer activity -->
    <string name="chronometer_normal">默认配置</string>
    <string name="chronometer_count_down">倒计时模式（时间减少, api>=24）countDown=true</string>
    <string name="chronometer_count_up">计时模式（时间增加, api>=24）countDown=false</string>

    <!-- EditText activity -->
    <string name="et_normal">默认配置</string>
    <string name="et_hint_focus">提示内容输入框</string>
    <string name="et_hint">提示内容（变更颜色）输入框</string>
    <string name="et_content">填充内容输入框，此时光标在最前面，需设置</string>
    <string name="et_background_no">去掉底部线条（实际上是背景）</string>
    <string name="et_background_another">更换底部线条背景为其他背景</string>
    <string name="et_input_date">date</string>
    <string name="et_input_datetime">datetime</string>
    <string name="et_input_none">none</string>
    <string name="et_input_number">number</string>
    <string name="et_input_numberDecimal">numberDecimal</string>
    <string name="et_input_numberPassword">numberPassword</string>
    <string name="et_input_numberSinged">numberSinged</string>
    <string name="et_input_phone">phone</string>
    <string name="et_input_text">text</string>
    <string name="et_input_textAutoComplete">textAutoComplete</string>
    <string name="et_input_textAutoCorrect">textAutoCorrect</string>
    <string name="et_input_textCapCharacters">textCapCharacters</string>
    <string name="et_input_textCapSentences">textCapSentences</string>
    <string name="et_input_textCapWords">textCapWords</string>
    <string name="et_input_textEmailAddress">textEmailAddress</string>
    <string name="et_input_textEmailSubject">textEmailSubject</string>
    <string name="et_input_textFilter">textFilter</string>
    <string name="et_input_textImeMultiLine">textImeMultiLine</string>
    <string name="et_input_textLongMessage">textLongMessage</string>
    <string name="et_input_textMultiLine">textMultiLine</string>
    <string name="et_input_textNoSuggestions">textNoSuggestions</string>
    <string name="et_input_textPassword">textPassword</string>
    <string name="et_input_textPersonName">textPersonName</string>
    <string name="et_input_textPhonetic">textPhonetic</string>
    <string name="et_input_textPostalAddress">textPostalAddress</string>
    <string name="et_input_textShortMessage">textShortMessage</string>
    <string name="et_input_textUri">textUri</string>
    <string name="et_input_textVisiblePassword">textVisiblePassword</string>
    <string name="et_input_textWebEditText">textWebEditText</string>
    <string name="et_input_textWebEmailAddress">textWebEmailAddress</string>
    <string name="et_input_textWebPassword">textWebPassword</string>
    <string name="et_input_time">time</string>

    <!-- AutoCompleteTextView Activity -->
    <string name="auto_complete_tv_description">单次提示指的是：关键字输入完毕后不再提示</string>
    <string name="auto_complete_tv_normal">默认配置(默认输入2个字符才出现提示)</string>
    <string name="auto_complete_tv_auto_1">自动提示(设置自动提示为 1 )</string>
    <string name="auto_complete_tv_auto_0">自动提示(设置自动提示为 0 )</string>
    <string-array name="auto_complete_tv_res">
        <item>北京</item>
        <item>上海</item>
        <item>广州</item>
        <item>深圳</item>
    </string-array>

    <!-- MultiAutoCompleteTextView Activity -->
    <string name="multi_auto_complete_tv_description">多次提示指的是：关键字输入完毕后添加间隔符，还可以再次提示</string>
    <string name="multi_auto_complete_tv_normal">默认配置(默认输入2个字符才出现提示)</string>
    <string name="multi_auto_complete_tv_auto_1">自动提示(设置自动提示为 1 )</string>
    <string name="multi_auto_complete_tv_auto_0">自动提示(设置自动提示为 0 )</string>
    <string-array name="multi_auto_complete_tv_res">
        <item>北京</item>
        <item>上海</item>
        <item>广州</item>
        <item>深圳</item>
    </string-array>

    <!-- Button Activity -->
    <string name="btn_description">1、相对于TextView文本都字体偏大且加粗形式\n
        2、默认button背景色未铺满给定区域\n
        3、默认button点击时有阴影效果</string>
    <string name="btn_normal">First Button，123，英文默认大写</string>
    <string name="btn_not_upper">Second Button，123，英文按照文本定义显示</string>
    <string name="btn_shape">自定义点击效果和样式（背景、字体）</string>
    <string name="btn_control_diy_shape">控制自定义样式的button（即上一个）</string>

    <!-- CompoundButton Activity-->
    <string name="compound_btn_description">复合按钮类型，抽象类无法实例化</string>

    <!-- CheckBox Activity-->
    <string name="check_box_normal">多选框（默认配置）</string>

    <!-- RadioButton Activity-->
    <string name="radio_btn_normal_description_1">第一组单选框（默认配置，宽度、背景色除外）</string>
    <string name="radio_btn_normal_description_2">第二组单选框（水平方向）</string>
    <string name="radio_btn_normal_selection_a">选项A</string>
    <string name="radio_btn_normal_selection_b">选项B</string>
    <string name="radio_btn_normal_selection_c">选项C</string>

    <!-- ToggleButton Activity -->
    <string name="toggle_btn_normal">默认配置</string>
    <string name="toggle_btn_no_background">去掉背景，background=@null</string>

    <!-- Switch Activity -->
    <string name="switch_normal">默认配置</string>
    <string name="switch_disabled">disabled状态</string>
    <string name="switch_no_background">去掉背景，background=@null</string>

    <!-- Space Activity -->
    <string name="space_description">
        Space 用于在组件中间占位，不绘制任何内容，因此无法设置背景色。
    </string>

    <!-- ViewStub Activity -->
    <string name="view_stub_description">
        ViewStub 包裹视图资源，但不会加载。\n
        1、ViewStub 创建时，setVisibility(GONE);\n
	    2、重写 onMeasure() 尺寸=== 0；重写 onDraw() 不绘制任何内容；\n
        3、仅在调用 setVisibility 或 inflate 时会加载资源，可以延迟加载或者不加载，特定地方可以减少加载的内容或可能不加载，因此可以增强性能。
    </string>
    <string name="view_stub_inflate">加载ViewStub布局</string>

    <!-- AbsoluteLayout Activity -->
    <string name="absolute_layout_description">
        AbsoluteLayout是采用（x，y）坐标点来决定组件位置的布局方式，在 API 3 中已经过期，不建议使用。
    </string>

    <!-- WebView Activity -->
    <string name="web_view_description">
        WebView描述
    </string>
    <string name="web_view_pre">上一页</string>
    <string name="web_view_home">主页</string>
    <string name="web_view_next">下一页</string>

    <!-- FrameLayout Activity -->
    <string name="frame_layout_description">
        帧布局：默认所有子组件按代码顺序由下到上排列，最上方的组件完全可见。\n
        1、未设置layout_gravity时，layout_margin以帧布局的左上角为参考点偏移;\n
        2、设置layout_gravity时,layout_margin以layout_gravity规定的位置作为参考点偏移；\n
        3、FrameLayout和其子组件均可设置前景图，FrameLayout的前景图处在所有子组件最上方，
        子组件的前景图处在子组件的最上方但可被其他同级组件遮盖，前景图位置可调整。
    </string>
    <string name="frame_layout_demo_1">组件遮盖测试，每个子组件都是正方形</string>
    <string name="frame_layout_demo_2">组件布局测试，紫色只用layout_gravity，红色采用了layout_gravity和layout_margin</string>
    <string name="frame_layout_demo_3">前景图测试，左下方的是FrameLayout的前景图，右下方是子组件的前景图</string>

    <!-- CalendarView Activity -->
    <string name="calendar_view_description">该视图用于从日历中选择指定的日期</string>

    <!-- DatePicker Activity -->
    <string name="date_picker_description">该视图既可以选择日期又可以显示日期</string>

    <!-- TimePicker Activity -->
    <string name="time_picker_description">该选择时间和显示时间，有clock和spinner两种模式</string>

    <!-- HorizontalScrollView Activity -->
    <string name="horizontal_scroll_view_description">
        HorizontalScrollView：内容超过布局尺寸时可水平滑动显示。\n
        1、HorizontalScrollView 的子组件只能存在一个，一般是线性布局，线性布局内部再包含其他组件；\n
        2、HorizontalScrollView 新增属性 fillViewport 会在子组件（线性布局）无法铺满 HorizontalScrollView占有的空间时，让子组件扩展以铺满其空间。\n
    </string>
    <string name="horizontal_scroll_view_demo_1">内容超过 HorizontalScrollView 占有的范围，内容滑动</string>
    <string name="horizontal_scroll_view_demo_2">内容不足 HorizontalScrollView 占有的范围，设置fillViewport=true，线性布局（绿色）铺满 HorizontalScrollView 所在空间</string>
    <string name="horizontal_scroll_view_demo_3">内容不足 HorizontalScrollView 占有的范围，未设置fillViewport属性，默认为false，因此线性布局（绿色）未铺满所以不可见</string>
    <string name="horizontal_scroll_view_demo_content">HorizontalScrollView</string>

    <!-- ScrollView Activity -->
    <string name="scroll_view_description">
        ScrollView：内容超过布局尺寸时可竖直滑动显示。\n
        1、ScrollView 的子组件只能存在一个，一般是线性布局，线性布局内部再包含其他组件；\n
        2、ScrollView 新增属性 fillViewport 会在子组件（线性布局）无法铺满 ScrollView 占有的空间时，让子组件扩展以铺满其空间。\n
    </string>
    <string name="scroll_view_demo_1">左侧样例：内容超过 ScrollView 占有的范围，内容滑动</string>
    <string name="scroll_view_demo_2">中间样例：内容不足 ScrollView 占有的范围，设置fillViewport=true，线性布局（绿色）铺满 ScrollView 所在空间</string>
    <string name="scroll_view_demo_3">右边样例：内容不足 ScrollView 占有的范围，未设置fillViewport属性，默认为false，因此线性布局（绿色）未铺满所以不可见</string>
    <string name="scroll_view_demo_content">ScrollView</string>

    <!-- TabHost Activity -->
    <string name="tab_host_description">TabHost是选项卡的最外层布局，具体使用请参考 https://blog.csdn.net/qq_38228830/article/details/80851532 。具体用例请参考TabWidget</string>
    <string name="tab_host_btn">toTabWidget</string>

    <!-- ImageSwitcher Activity -->
    <string name="image_switcher_description">
        ImageSwitcher（图片切换器）用于实现图片切换的动画效果\n
        使用参考： https://www.jianshu.com/p/ccc7aa90b0eb
    </string>

    <!-- TextSwitcher Activity -->
    <string name="text_switcher_description">
        TextSwitcher（文本切换器）用于实现文本切换的动画效果\n
        使用参考： https://www.jianshu.com/p/ccc7aa90b0eb
    </string>

    <!-- GridLayout Activity -->
    <string name="grid_layout_description">
        网格布局是API15引入\n
        1、网格布局可设置行列总数和排列方向，默认水平\n
        2、单元格可设置在网格中的位置，未指定位置的按照代码顺序和排列方向依次排列\n
        3、单元格可扩充到占多行、多列，如下列例子。
        4、与TableLayout相比，GridLayout具有扩行能力，更加灵活
    </string>
    <string name="grid_layout_demo_1">默认设置，退化成线性布局，默认水平，不会换行</string>
    <string name="grid_layout_demo_2">3x3，单元格默认水平排列。可设置单元格的行列坐标(0行0列开始)，但整体内容未铺满屏幕。\n
        未单独设置行列的单元格按照代码顺序（若代码顺序中本单元格的上一个单元格A设置了行列，那么本单元格从A的后一个开始排列，例如后13，后21）和布局方向排列。
        由于后13角标是21，但21位置之后设置其他单元格，因此红色13前半部分被覆盖，第一内容容宽，因此第一列整体宽度大；后21角标是22  </string>
    <string name="grid_layout_demo_3">3x3，单元格竖直排列。其他同上，因此后21的角标是31，后13角标是23</string>
    <string name="grid_layout_demo_4">这里引入的是android.support.v7.widget.GridLayout，由于需要使用 API 21 引入的 layout_columnWeight和layout_rowWeight属性，确保内容铺满屏幕且平分</string>
    <string name="grid_layout_behind_13">后13</string>
    <string name="grid_layout_behind_21">后21</string>
    <string name="grid_layout_cal_back">退格</string>
    <string name="grid_layout_cal_divide">/</string>
    <string name="grid_layout_cal_multi">*</string>
    <string name="grid_layout_cal_num_1">1</string>
    <string name="grid_layout_cal_num_2">2</string>
    <string name="grid_layout_cal_num_3">3</string>
    <string name="grid_layout_cal_equal">=</string>
    <string name="grid_layout_cal_mode">%</string>
    <string name="grid_layout_cal_zero">0</string>
    <string name="grid_layout_cal_point">.</string>

    <!-- LinearLayout Activity -->
    <string name="linear_layout_description">
        1、水平方向或竖直方向依次排列，内容超出不换行；\n
        2、内容可在行或列上平分或按比例分配；\n
        3、内容还可以大部分设置具体高宽，最后一个占满剩余空间</string>
    <string name="linear_layout_demo_1">默认水平布局，内容未超过宽度，平铺.</string>
    <string name="linear_layout_demo_2">水平布局，内容超过宽度，超出内容未显示且添加和减少内容占有高度不变化，原因未知</string>
    <string name="linear_layout_demo_3">水平布局，宽度占满，子视图平分宽度.</string>
    <string name="linear_layout_demo_4">水平布局，宽度占满，子视图按比例3：2：1平分宽度，宽度属性值match_parent.</string>
    <string name="linear_layout_demo_5">竖直布局，部分占有固定高度，剩一个元素占满剩余空间.</string>

    <!-- NumberPicker Activity -->
    <string name="number_picker_description">数字（字符串数组也可以）选择器：\n
        1、支持范围内选择，\n
        2、支持键盘输入，\n
        3、支持内容循环滑动，\n
        4、字体大小、分割线颜色等。\n
        5、默认竖直方向（设置水平无效）\n
        6、参考 https://www.jianshu.com/p/1042995703ad \n
    </string>
    <string name="number_picker_person_height">身高选择（cm）：</string>
    <string name="number_picker_demo_2">设置成水平方向，但实际并没有变更，因此不支持水平。显示数组内容，不可循环、不可编辑</string>

    <!-- RadioGroup Activity -->
    <string name="radio_group_description">RadioGroup是专为RadioButton定制的线性布局。\n
        1、拥有checkedButton属性以指定默认选择的选项。\n
        2、可以通过getCheckedRadioButtonId ()获取当前被选择的选项，若没有值为-1。\n
        3、默认竖直方向排列，与线性布局不同。\n
    </string>
    <string name="radio_group_demo_1">首个选项通过RG的checkedButton默认设置为已选择，选择其他选项时首个选项变成未选择。</string>
    <string name="radio_group_demo_2">没有按钮默认已选择</string>
    <string name="radio_group_demo_3">3、4号按钮通过RB的checked属性设置为已选择，选择其他选项时，3、4号按钮仍是选择状态</string>
    <string name="radio_group_demo_4">如果要求选项根据屏幕尺寸变成2行2列4个的形式该如何实现呢？</string>
    <string name="radio_group_selection_1">A</string>
    <string name="radio_group_selection_2">B</string>
    <string name="radio_group_selection_3">C</string>
    <string name="radio_group_selection_4">D</string>

    <!-- TabWidget Activity -->
    <string name="tab_widget_description">
        选项卡布局组件\n
        1、TabWidget在它父容器选项卡集合中展示一些代表每个页面的选项卡。\n
        2、TabWidget的父容器是TabHost，尽量不要操作TabWidget，应通过操作TabHost达到目的。\n
        3、一般情况是TabHost、TabWidget、FrameLayout组合使用：\n
            TabHost代表整个选项卡及其内容集合（若所在Activity是TabActivity则其id必须是 android:id/tabhost；否则可自定义）\n
            TabWidget是选项，可点击选择（其id必须是 android:id/tabs）\n
            FrameLayout是每个选项展示的内容（其id必须是 android:id/tabcontent）\n
        4、参考 https://www.jianshu.com/p/caf3d1ef4dda
    </string>
    <string name="tab_widget_demo_1">整体布局上比较固定，选项中每一页内容比较灵活</string>

    <!-- TableLayout Activity -->
    <string name="table_layout_description">
        表格布局\n
        1、TableLayout以行和列形式对控件进行管理，每行一个TableRow对象或一个View对象。
        若是TableRow对象，则可在TableRow内添加子控件，默认情况下每个子控件占据一列；若是View对象，则单独一列（如果这个view对象是容器，应该可以添加内容）。\n
        2、TableLayout行数由开发决定，写多少个TableRow和一级子VIew，就有多少行。\n
        3、与 GridLayout 相比，TableLayout不具有跨行的能力，具有跨列能力。\n
    </string>
    <string name="table_layout_demo_1">第0列扩展、第2列收缩、第3列隐藏，其他均为默认配置</string>

    <!-- TableRow Activity -->
    <string name="table_row_description">
        表格行：一种为TableLayout行元素定制的水平方向的布局。\n
        TableRow应该始终作为TableLayout的子项使用，若TableRow的父容器不是TableLayout，那么它与水平方向的线性布局表现相同。
    </string>

    <!-- ZoomControls Activity -->
    <string name="zoom_controls_description">
        放大缩小布局，包含两个按钮，分别上传放大、缩小事件。\n
    </string>
    <string name="zoom_controls_demo_1">放大缩小文本，通过事件触发setSize方法</string>

    <!-- RelativeLayout Activity -->
    <string name="relative_description">相对布局的主要两种布局情况：相对父容器View、相对同级View。\n
        相对父容器水平、竖直居中，左、顶、右、底对齐；\n
        相对同级元素居左、上、右、下，左、顶、右、底对齐。\n
        alignBaseline暂不可理解。\n
        alignWithParentIfMissing意思是：设置相对同级元素A居左，如果没有实际运行时没有这个元素A时，则相对父容器
    </string>
    <string name="relative_center">中心元素</string>
    <string name="relative_center_left">左元素</string>
    <string name="relative_center_right">右元素</string>
    <string name="relative_center_top">上元素</string>
    <string name="relative_center_bottom">下元素</string>
    <string name="relative_center_lt">左上元素</string>
    <string name="relative_center_rb">右下元素</string>
    <string name="relative_bottom_left">底左元素</string>
    <string name="relative_bottom_center">底中元素</string>
    <string name="relative_bottom_right">底右元素</string>
    <string name="relative_base_line">alignBaseline</string>

    <!-- DialerFilter Activity-->
    <string name="dialer_filter_description">API 26 已过期 \n这个控件是一个布局，它包含了几个指定命名的子视图，可以处理标准电话数字拨号键盘。</string>

    <!-- TwoLineListItem Activity -->
    <string name="two_line_list_item_description">整体描述：\n
        内部包含两个id（@android:id/text1，@android:id/text2）确定的TextView(或子类)，
        一个id（@android:id/selectedIcon）确定的iewV（或子类），
        但在默认配置下三种 mode值 貌似没有效果，因此此时三者实际上没有布局关系，聚集在父类左上角。\n\n
        布局比较简单自定义即可！！！\n
    </string>
    <string name="two_line_list_item_text_1">SSSSSSSSSSSSSSSSSS</string>
    <string name="two_line_list_item_text_2">BBBBBBBBBBBBBBBBB</string>
    <string name="two_line_list_item_mode_one">mode=oneLine</string>
    <string name="two_line_list_item_mode_two">mode=twoLine</string>
    <string name="two_line_list_item_mode_collapsing">mode=collapsing</string>
    <string name="two_line_list_item_layout">mode=oneLine，应用相对布局</string>

    <!-- Animation Frame Activity -->
    <string name="animation_frame_description">
        帧动画\n
        帧动画的原理：将一张张单独的图片连贯的进行播放产生视觉上的动画效果。\n
        帧动画的内容和效果可以通过指定图片资源和图片显示时间决定。
    </string>

    <!-- Animation Tween Activity -->
    <string name="animation_tween_description">
        补间动画\n
        补间动画分为四种形式：alpha（透明度）、translate（位移）、scale（缩放）、rotate（旋转）。\n
        补间动画一般采用 xml 实现，代码易书写和复用。\n
        有疑问可以先查看Java文件注释，若不能解决则查找其它资料
    </string>

    <!-- Animation Attribute Activity -->
    <string name="animation_attribute_description">
        属性动画\n
        属性动画也有四种变换：alpha（透明度）、translate（位移）、scale（缩放）、rotate（旋转）。\n
        属性动画由于牵扯到具体对象的属性，因此一般采用 java 实现，通过动态代码获取。xml 也可以实现但是不方便。
    </string>

    <!-- 自定义权限信息 -->
    <string name="permlab_customization_permission_page">to enter customization permission page</string>
    <string name="permdesc_customization_permission_page">Allows the app to enter customization permission page.</string>
    <string name="customization_permission_desc">外部应用只有申请了必要的权限才能打开本页面</string>

    <!-- 窗口软键盘模式 -->
    <string name="to_adjust_nothing">adjustNothing</string>
    <string name="to_adjust_pan">adjustPan</string>
    <string name="to_adjust_resize">adjustResize</string>
    <string name="to_adjust_unspecified">adjustUnspecified</string>
    <string name="to_state_always_hidden">stateAlwaysHidden</string>
    <string name="to_state_always_visible">stateAlwaysVisible</string>
    <string name="to_state_hidden">stateHidden</string>
    <string name="to_state_visible">stateVisible</string>
    <string name="to_state_unchanged">stateUnchanged</string>
    <string name="to_state_unspecified">stateUnspecified</string>

    <!-- 自定义view -->
    <string name="customization_view_request_layout">调用MusicSwitchView的 requestLayout（仅UI线程）</string>
    <string name="customization_view_invalidate">调用MusicSwitchView的 invalidate（UI线程）</string>
    <string name="customization_view_post_invalidate">调用MusicSwitchView的 postInvalidate（无线程限制）</string>

    <string name="customization_view_no_attr_request_layout">调用CustomizedView的 requestLayout（仅UI线程）</string>
    <string name="customization_view_no_attr_invalidate">调用CustomizedView的 invalidate（UI线程）</string>
    <string name="customization_view_no_attr_post_invalidate">调用CustomizedView的 postInvalidate（无线程限制）</string>

    <!-- drawable -->
    <string name="drawable_bitmap_dsc">
        bitmap（位图）资源：Android 平台支持 png、jpg、gif（无法自动播放）三种格式。\n
        bitmap 可以通过 xml 添加部分需要的属性，通过资源文件的 bitmap 标签即可。
    </string>
    <string name="drawable_nine_patch_dsc">
        9patch图片\n
        用于不规则图片按照某种规则进行缩放图片功能
    </string>
    <string name="drawable_layer_dsc">
        图层列表：\n
        用于管理其他可绘制对象，列表内的所有item按照顺序绘制，最后一个在最上方。\n
        可以实现不同图层错位（阴影、旋转等）效果\n
        还可以实现闪屏页，避免不同机型缩放问题，如下图
    </string>
    <string name="drawable_state_list_dsc">
        状态列表：\n
        首先定义不同组合状态对应的drawable的item，\n
        然后当组件状态变化时重新匹配已配置的item，\n
        匹配成功则自动切换至对应的item的drawable视图，否则不可见或不显示
    </string>
    <string name="drawable_level_list_dsc">
        级别列表：\n
        首先定义不同级别范围对应的drawable的item，\n
        然后通过java代码根据需要来更改level值，并重新匹配\n
        匹配成功则自动切换至对应的item的drawable视图，否则不可见或不显示
    </string>
    <string name="drawable_transition_dsc">
        TransitionDrawable（可绘制对象切换）\n
        与 level 有关\n
        定义的item会以指定的时间间隔切换，ImageView的大小不会因实际Drawable大小的变化而变化，因此可能会出现拉伸。经测试，即使ImageView添加了scaleType属性，仍然无法解决拉伸问题。
    </string>
    <string name="drawable_inset_dsc">
        InsetDrawable（嵌入可绘制对象）\n
        它的最重要的用途是什么呢？
        样例ImageView为wrap_content，上下inset=10，左右inset=30，可以看到ImageView比实际图片大小更大。
    </string>
    <string name="drawable_clip_dsc">
        ClipDrawable（裁剪可绘制对象）\n
        与 level 有关\n
        竖直裁剪方向时，按照gravity指定的内容进行裁剪，例如样例为竖直方向，gravity=center，因此裁剪上下保留中间；\n
        水平裁剪方向时，同理。
    </string>
    <string name="drawable_scale_dsc">
        ScaleDrawable（缩放可绘制对象）\n
        与 level 有关\n
        缩放可绘制对象，但不会影响ImageView的大小
    </string>
    <string name="drawable_shape_dsc">
        ShapeDrawable（形状可绘制对象）\n
        自定义形状：矩形、圆、线、环。\n
        大小：size\n
        纯色填充：solid\n
        渐变色填充：gradient\n
        边框：stroke\n
        圆角：corners\n
        内边距：padding\n
    </string>
    <string name="drawable_level_list_0">设置level=0</string>
    <string name="drawable_level_list_5">设置level=5</string>
    <string name="drawable_level_list_15">设置level=15</string>
    <string name="drawable_level_list_25">设置level=25</string>
    <string name="drawable_shape_padding_dsc">shape padding 生效必须是组件有内容的情况，例如下面的ImageView并无效果，TextView有效果，没有使用该padding shape的TextView也没有效果</string>

    <string name="font_dsc">
        字体样式（宋体、微软雅黑等）\n\n
        TextView的typeface属性用于设置系统自带的字体别名；\n
        TextView的fontFamily属性用于引用在res/font/目录下的ttf字体文件；\n
        res/font目录下的ttf字体文件可以通过java代码动态设置；\n
        字体文件还可以放在assets/fonts目录下，通过java代码动态设置；\n\n
        typeface是绿色，fontFamily是橘色，动态设置时红色。\n
    </string>
</resources>
